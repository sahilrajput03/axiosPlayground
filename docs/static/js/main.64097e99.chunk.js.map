{"version":3,"sources":["App.js","riskyCode.js","Testing.js","index.js"],"names":["postRef","document","axios","initialDbPrefix","App","useWhatPersistent","dbPrefix","setDbPrefix","login","setLogin","db","setDb","allUnits","setAllUnits","useState","fetchRef","useRef","log","post","then","data","Array","catch","e","allUnitsNew","ClearButton","onClick","localStorage","clear","useEffect","dbsetbuttons","map","dbName","idx","key","Login","onSubmit","preventDefault","value","onChange","target","element","Unit","ID","inputCode","result","requestName","v4","length","inputCode_remote","resul_remote","setInputCode","setResult","getWhat","useDebounce","combinedDebounce","_","className","placeholder","riskyCode","a","eval","JSON","stringify","content","console","fn","MyResizable","width","height","state","setState","onResize","event","size","handle","style","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.64097e99.chunk.js","sourcesContent":["/* eslint-disable no-eval, no-unused-vars */\nimport React, {useEffect, useState, useRef} from 'react';\nimport './styles.css';\nimport axios from 'axios';\nimport {useLocalStorage} from './useLocalStorage';\nimport {riskyCode} from './riskyCode';\nimport {log, useWhat, getWhat, useWhatPersistent} from 'usewhat';\nimport {useDebounce} from 'use-debounce';\nimport {v4} from 'uuid';\nimport {MyResizable} from './Testing.js';\n//new deployment @ https://csb-nljvu.netlify.app/\n\ndocument.axios = axios;\nlet postRef;\n\nconst initialDbPrefix = 'https://e53e8cfe24ac.ngrok.io';\n\nexport default function App() {\n  // const dbPrefix = 'https://jsonbackendserver.herokuapp.com';\n  const [dbPrefix, setDbPrefix] = useWhatPersistent(\n    'dbprefix',\n    initialDbPrefix\n  );\n  // using useLocalStorage here throws warning that circular objects can't be converted ..blah blah.., dig it out...\n  // const [allUnits, setAllUnits] = useState([<Unit key={Math.random()} />]);\n  const [login, setLogin] = useWhatPersistent('login', 'guest');\n  const [db, setDb] = useWhatPersistent('db', 'one');\n  // const [db_localStorage, setDb_localStorage] = useLocalStorage('db', null);\n  // if (db !== db_localStorage) setDb_localStorage(db);\n  const [allUnits, setAllUnits] = useWhatPersistent('allUnits', []);\n  // const [allUnits, setAllUnits] = useWhat(\"allUnits\", []);\n  const [count, setCount] = useState(1);\n  let fetchRef = useRef();\n\n  fetchRef = () => {\n    log('fetchref executed');\n    axios\n      .post(`${dbPrefix}/${login}_${db}`)\n      .then(({data}) => {\n        setAllUnits(data.allUnits instanceof Array ? data.allUnits : []);\n        log('#fetched from', login + db, data);\n        // log('#fetched', data.allUnits);\n      })\n      .catch((e) => {});\n  };\n\n  postRef = (allUnitsNew) => {\n    axios\n      .post(`${dbPrefix}/${login}_${db}`, {allUnits: allUnitsNew})\n      .catch((e) => {});\n    log(allUnitsNew);\n    log('#posted to =>', login + '_' + db);\n  };\n\n  const ClearButton = (\n    <button\n      onClick={() => {\n        setAllUnits([]);\n        localStorage.clear();\n      }}\n    >\n      Clear List\n    </button>\n  );\n\n  useEffect(() => {\n    fetchRef();\n  }, [db, dbPrefix]);\n\n  const dbsetbuttons = ['one', 'two', 'three'].map((dbName, idx) => (\n    <button\n      key={idx}\n      onClick={() => {\n        setDb(dbName);\n      }}\n    >\n      Set db to {dbName}\n    </button>\n  ));\n\n  const Login = (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        fetchRef();\n      }}\n    >\n      <input value={login} onChange={({target: {value}}) => setLogin(value)} />\n    </form>\n  );\n\n  return (\n    <div>\n      <h1>Axios Playground</h1>\n      <h3>\n        100% ready for your offline needs for storing your axios requests and\n        their responses right here.\n      </h3>\n      <h3>\n        Can't believe ? Make some axios requests and wait for 2 seconds to let\n        it save to localStorage, and boom its saved(try refresing see if it\n        persists or not.)\n      </h3>\n      <h2>\n        Bonus: Add unlimited requests with `Add request` button below, Yikes!!\n      </h2>\n      {allUnits?.map((element) => (\n        <Unit\n          key={element.ID}\n          ID={element.ID}\n          inputCode={element.inputCode}\n          result={element.result}\n          requestName={element.requestName}\n        />\n      ))}\n      <br />\n      <br />\n      <br />\n      <button\n        onClick={() => {\n          const allUnitsNew = [\n            ...allUnits,\n            {ID: v4(), requestName: `Request ${allUnits.length + 1}`}\n          ];\n          setAllUnits(allUnitsNew);\n          postRef(allUnitsNew);\n        }}\n      >\n        Add request (unit)\n      </button>\n      {ClearButton}\n      <br />\n      <br />→ Logged in as <b>{login}</b>\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <b>Disclaimer:</b>\n      <br /> 1. No signup required <br /> 2. For now there's no securitey to any\n      account.\n      <br /> 3. Tip: Press enter to login. or `sahil`).\n      <br /> 4. Changing db only works for when you set valid jsonbackendserver\n      in the `Input backend database` field and press enter.\n      <br /> 5. This axios playground perfectly works for locally saving to\n      broser too.\n      <br /> 6. Please allow 2 seconds after typing into request code area to\n      get it saved to localStorage to browser.\n      <br />\n      4. Tip: For testing use either `sahil` or `guest`.\n      <br />\n      Happy Hacking!\n      <br />\n      <br />\n      →Input backend database url to use:\n      <input\n        value={dbPrefix}\n        onChange={({target: {value}}) => setDbPrefix(value)}\n      />\n      <br />\n      <br />→ Enter your desired username to login - {Login}\n      <br />→ Current db: <b>{db}</b> <br />\n      {dbsetbuttons} <br />\n    </div>\n  );\n}\n\nfunction Unit({\n  inputCode: inputCode_remote,\n  ID,\n  result: resul_remote,\n  requestName\n}) {\n  const [inputCode, setInputCode] = useState(\n    inputCode_remote ?? \"axios.get('https://reverberate.ml')\"\n  );\n  const [result, setResult] = useWhatPersistent(\n    requestName,\n    resul_remote ?? ''\n  ); // ? Testing(Works perferctly fine for now!!) for storing result to local storage too.\n  // const [result, setResult] = useState(resul_remote ?? \"\");\n  const [allUnits, setAllUnits] = getWhat('allUnits');\n  const [combinedDebounce] = useDebounce(inputCode + result, 2000);\n  const [db] = getWhat('db');\n  const [dbPrefix, _] = getWhat('dbprefix');\n\n  useEffect(() => {\n    let allUnitsNew = allUnits.map((e) =>\n      e.ID === ID ? {...e, inputCode, result} : e\n    );\n\n    setAllUnits(allUnitsNew);\n    postRef(allUnitsNew);\n    //  eslint-disable-next-line\n  }, [combinedDebounce]);\n  return (\n    <fieldset className=\"App\">\n      <legend>{requestName}</legend>\n      <textarea\n        value={inputCode}\n        placeholder=\"Write some request with axios, say get/delete/post whatever you like.\"\n        onChange={({target: {value}}) => {\n          setInputCode(value);\n        }}\n      />\n      <button\n        onClick={() => {\n          riskyCode(async () => {\n            let {data} = await eval('document.' + inputCode);\n            if (typeof data === 'object')\n              setResult(JSON.stringify(data, null, 2));\n            else {\n              setResult(data);\n            }\n          }, setResult);\n        }}\n      >\n        Fire request !!\n      </button>\n      <br />\n      {/* <textarea id=\"resultnew\">{result}</textarea> THIS DOESN'T WORK GOOD. */}\n      <MyResizable content={result} />\n      {/* <pre id=\"result\">{result}</pre> */}\n    </fieldset>\n  );\n}\n","let log = console.log;\r\n\r\nexport let riskyCode = async (fn, setResult) => {\r\n  try {\r\n    await fn();\r\n  } catch (error) {\r\n    log('#caught::', error);\r\n    setResult(\r\n      \"#Request falied!, possible errors are - 1. Syntax errors, 2. Target doesn't supports `CORS`, etc.\"\r\n    );\r\n  }\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withResizeDetector} from 'react-resize-detector';\r\nimport {Resizable, ResizableBox} from 'react-resizable';\r\nimport {log} from 'usewhat';\r\n\r\nexport const MyResizable = ({content}) => {\r\n  const [state, setState] = useState({\r\n    width: 600,\r\n    // width: 'auto',\r\n    height: 200\r\n  });\r\n  const onResize = (event, {element, size, handle}) => {\r\n    log(size);\r\n    setState({width: size.width, height: size.height});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Resizable\r\n        className=\"box\"\r\n        height={state.height}\r\n        width={state.width}\r\n        onResize={onResize}\r\n      >\r\n        <div\r\n          className=\"box\"\r\n          style={{\r\n            width: state.width + 'px',\r\n            height: state.height + 'px'\r\n          }}\r\n        >\r\n          <span className=\"text\">\r\n            {/* {'Raw use of <Resizable> element. 200x200, all Resize Handles.'} */}\r\n            <pre style={{height: state.height - 15}}>{content}</pre>\r\n          </span>\r\n          {/* <button onClick={onResetClick} style={{marginTop: '10px'}}>\r\n            Reset this element's width/height\r\n          </button> */}\r\n        </div>\r\n      </Resizable>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\trootElement\n);\n"],"sourceRoot":""}