{"version":3,"sources":["App.js","riskyCode.js","index.js"],"names":["log","console","postRef","document","axios","initialDbPrefix","App","useWhatPersistent","dbPrefix","setDbPrefix","login","setLogin","db","setDb","allUnits","setAllUnits","useState","fetchRef","useRef","post","then","data","Array","allUnitsNew","ClearButton","onClick","localStorage","clear","useEffect","dbsetbuttons","map","dbName","idx","key","Login","onSubmit","e","preventDefault","value","onChange","target","element","Unit","ID","inputCode","result","requestName","v4","length","inputCode_remote","resul_remote","setInputCode","setResult","getWhat","useDebounce","combinedDebounce","_","className","placeholder","riskyCode","a","eval","JSON","stringify","id","fn","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4921c1bd.chunk.js","sourcesContent":["/* eslint-disable no-eval, no-unused-vars */\nimport React, {useEffect, useState, useRef} from \"react\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport {useLocalStorage} from \"./useLocalStorage\";\nimport {riskyCode} from \"./riskyCode\";\nimport {useWhat, getWhat, useWhatPersistent} from \"usewhat\";\nimport {useDebounce} from \"use-debounce\";\nimport {v4} from \"uuid\";\n//new deployment @ https://csb-nljvu.netlify.app/\nlet log = console.log;\ndocument.axios = axios;\n\nlet postRef;\n\nconst initialDbPrefix = \"https://e53e8cfe24ac.ngrok.io\";\n\nexport default function App() {\n  // const dbPrefix = 'https://jsonbackendserver.herokuapp.com';\n  const [dbPrefix, setDbPrefix] = useWhatPersistent(\"dbprefix\", initialDbPrefix);\n  // using useLocalStorage here throws warning that circular objects can't be converted ..blah blah.., dig it out...\n  // const [allUnits, setAllUnits] = useState([<Unit key={Math.random()} />]);\n  const [login, setLogin] = useWhatPersistent(\"login\", \"guest\");\n  const [db, setDb] = useWhatPersistent(\"db\", \"one\");\n  // const [db_localStorage, setDb_localStorage] = useLocalStorage('db', null);\n  // if (db !== db_localStorage) setDb_localStorage(db);\n  const [allUnits, setAllUnits] = useWhatPersistent(\"allUnits\", []);\n  // const [allUnits, setAllUnits] = useWhat(\"allUnits\", []);\n  const [count, setCount] = useState(1);\n  let fetchRef = useRef();\n\n  fetchRef = () => {\n    log(\"fetchref executed\");\n    axios.post(`${dbPrefix}/${login}_${db}`).then(({data}) => {\n      setAllUnits(data.allUnits instanceof Array ? data.allUnits : []);\n      log(\"#fetched from\", login + db, data);\n      // log('#fetched', data.allUnits);\n    });\n  };\n\n  postRef = (allUnitsNew) => {\n    axios.post(`${dbPrefix}/${login}_${db}`, {allUnits: allUnitsNew});\n    log(allUnitsNew);\n    log(\"#posted to =>\", login + \"_\" + db);\n  };\n\n  const ClearButton = (\n    <button\n      onClick={() => {\n        setAllUnits([]);\n        localStorage.clear();\n      }}>\n      Clear List\n    </button>\n  );\n\n  useEffect(() => {\n    fetchRef();\n  }, [db, dbPrefix]);\n\n  const dbsetbuttons = [\"one\", \"two\", \"three\"].map((dbName, idx) => (\n    <button\n      key={idx}\n      onClick={() => {\n        setDb(dbName);\n      }}>\n      Set db to {dbName}\n    </button>\n  ));\n\n  const Login = (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        fetchRef();\n      }}>\n      <input value={login} onChange={({target: {value}}) => setLogin(value)} />\n    </form>\n  );\n\n  return (\n    <div>\n      <h1>Axios Playground</h1>\n      <h3>100% ready for your offline needs for storing your axios requests and their responses right here.</h3>\n      <h3>Can't believe ? Make some axios requests and wait for 2 seconds to let it save to localStorage, and boom its saved(try refresing see if it persists or not.)</h3>\n      <h2>Bonus: Add unlimited requests with `Add request` button below, Yikes!!</h2>\n      {allUnits?.map((element) => (\n        <Unit key={element.ID} ID={element.ID} inputCode={element.inputCode} result={element.result} requestName={element.requestName} />\n      ))}\n      <br />\n      <br />\n      <br />\n      <button\n        onClick={() => {\n          const allUnitsNew = [...allUnits, {ID: v4(), requestName: `Request ${allUnits.length + 1}`}];\n          setAllUnits(allUnitsNew);\n          postRef(allUnitsNew);\n        }}>\n        Add request (unit)\n      </button>\n      {ClearButton}\n      <br />\n      <br />→ Logged in as <b>{login}</b>\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <b>Disclaimer:</b>\n      <br /> 1. No signup required <br /> 2. For now there's no securitey to any account.\n      <br /> 3. Tip: Press enter to login. or `sahil`).\n      <br /> 4. Changing db only works for when you set valid jsonbackendserver in the `Input backend database` field and press enter.\n      <br /> 5. This axios playground perfectly works for locally saving to broser too.\n      <br /> 6. Please allow 2 seconds after typing into request code area to get it saved to localStorage to browser.\n      <br />\n      4. Tip: For testing use either `sahil` or `guest`.\n      <br />\n      Happy Hacking!\n      <br />\n      <br />\n      →Input backend database url to use:\n      <input value={dbPrefix} onChange={({target: {value}}) => setDbPrefix(value)} />\n      <br />\n      <br />→ Enter your desired username to login - {Login}\n      <br />→ Current db: <b>{db}</b> <br />\n      {dbsetbuttons} <br />\n    </div>\n  );\n}\n\nfunction Unit({inputCode: inputCode_remote, ID, result: resul_remote, requestName}) {\n  const [inputCode, setInputCode] = useState(inputCode_remote ?? \"axios.get('https://reverberate.ml')\");\n  const [result, setResult] = useWhatPersistent(requestName, resul_remote ?? \"\"); // ? Testing(Works perferctly fine for now!!) for storing result to local storage too.\n  // const [result, setResult] = useState(resul_remote ?? \"\");\n  const [allUnits, setAllUnits] = getWhat(\"allUnits\");\n  const [combinedDebounce] = useDebounce(inputCode + result, 2000);\n  const [db] = getWhat(\"db\");\n  const [dbPrefix, _] = getWhat(\"dbprefix\");\n\n  useEffect(() => {\n    let allUnitsNew = allUnits.map((e) => (e.ID === ID ? {...e, inputCode, result} : e));\n\n    setAllUnits(allUnitsNew);\n    postRef(allUnitsNew);\n    //  eslint-disable-next-line\n  }, [combinedDebounce]);\n  return (\n    <fieldset className=\"App\">\n      <legend>{requestName}</legend>\n      <textarea\n        value={inputCode}\n        placeholder=\"Write some request with axios, say get/delete/post whatever you like.\"\n        onChange={({target: {value}}) => {\n          setInputCode(value);\n        }}\n      />\n      <button\n        onClick={() => {\n          riskyCode(async () => {\n            let {data} = await eval(\"document.\" + inputCode);\n            if (typeof data === \"object\") setResult(JSON.stringify(data, null, 2));\n            else {\n              setResult(data);\n            }\n          }, setResult);\n        }}>\n        Fire request !!\n      </button>\n      <br />\n      <pre id=\"result\">{result}</pre>\n    </fieldset>\n  );\n}\n","let log = console.log;\r\n\r\nexport let riskyCode = async (fn, setResult) => {\r\n  try {\r\n    await fn();\r\n  } catch (error) {\r\n    log('#caught::', error);\r\n    setResult(\r\n      \"#Request falied!, possible errors are - 1. Syntax errors, 2. Target doesn't supports `CORS`, etc.\"\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\trootElement\n);\n"],"sourceRoot":""}