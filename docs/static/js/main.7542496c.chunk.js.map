{"version":3,"sources":["App.js","riskyCode.js","index.js"],"names":["log","console","postRef","App","useWhatPersistent","dbPrefix","setDbPrefix","login","setLogin","db","setDb","useWhat","allUnits","setAllUnits","useState","fetchRef","useRef","axios","post","then","data","Array","allUnitsNew","ClearButton","onClick","localStorage","clear","useEffect","dbsetbuttons","map","dbName","idx","key","Login","onSubmit","e","preventDefault","value","onChange","target","element","Unit","ID","inputCode","result","requestName","v4","length","inputCode_remote","resul_remote","setInputCode","setResult","getWhat","useDebounce","combinedDebounce","className","placeholder","riskyCode","a","eval","JSON","stringify","id","document","fn","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7542496c.chunk.js","sourcesContent":["/* eslint-disable no-eval, no-unused-vars */\nimport React, {useEffect, useState, useRef} from 'react';\nimport './styles.css';\nimport axios from 'axios';\nimport {useLocalStorage} from './useLocalStorage';\nimport {riskyCode} from './riskyCode';\nimport {useWhat, getWhat, useWhatPersistent} from 'usewhat';\nimport {useDebounce} from 'use-debounce';\nimport {v4} from 'uuid';\n//new deployment @ https://csb-nljvu.netlify.app/\nlet log = console.log;\ndocument.axios = axios;\n\nlet postRef;\n\nexport default function App() {\n  // const dbPrefix = 'https://jsonbackendserver.herokuapp.com';\n  const [dbPrefix, setDbPrefix] = useWhatPersistent(\n    'dbprefix',\n    'https://e53e8cfe24ac.ngrok.io'\n  );\n  // using useLocalStorage here throws warning that circular objects can't be converted ..blah blah.., dig it out...\n  // const [allUnits, setAllUnits] = useState([<Unit key={Math.random()} />]);\n  const [login, setLogin] = useWhatPersistent('login', 'guest');\n  const [db, setDb] = useWhatPersistent('db', 'one');\n  // const [db_localStorage, setDb_localStorage] = useLocalStorage('db', null);\n  // if (db !== db_localStorage) setDb_localStorage(db);\n  const [allUnits, setAllUnits] = useWhat('allUnits', []);\n  const [count, setCount] = useState(1);\n  let fetchRef = useRef();\n\n  fetchRef = () => {\n    log('fetchref executed');\n    axios.post(`${dbPrefix}/${login}_${db}`).then(({data}) => {\n      setAllUnits(data.allUnits instanceof Array ? data.allUnits : []);\n      log('#fetched from', login + db, data);\n      // log('#fetched', data.allUnits);\n    });\n  };\n\n  postRef = (allUnitsNew) => {\n    axios.post(`${dbPrefix}/${login}_${db}`, {allUnits: allUnitsNew});\n    log(allUnitsNew);\n    log('#posted to =>', login + '_' + db);\n  };\n\n  const ClearButton = (\n    <button\n      onClick={() => {\n        setAllUnits([]);\n        localStorage.clear();\n      }}\n    >\n      Clear List\n    </button>\n  );\n\n  useEffect(() => {\n    fetchRef();\n  }, [db, dbPrefix]);\n\n  const dbsetbuttons = ['one', 'two', 'three'].map((dbName, idx) => (\n    <button\n      key={idx}\n      onClick={() => {\n        setDb(dbName);\n      }}\n    >\n      Set db to {dbName}\n    </button>\n  ));\n\n  const Login = (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        fetchRef();\n      }}\n    >\n      <input value={login} onChange={({target: {value}}) => setLogin(value)} />\n    </form>\n  );\n\n  return (\n    <div>\n      → Enter your desired username to login - {Login}\n      <br />→ Current db: <b>{db}</b> <br />\n      {dbsetbuttons} <br />\n      {allUnits?.map((element) => (\n        <Unit\n          key={element.ID}\n          ID={element.ID}\n          inputCode={element.inputCode}\n          result={element.result}\n          requestName={element.requestName}\n        />\n      ))}\n      <br />\n      <br />\n      <br />\n      <button\n        onClick={() => {\n          const allUnitsNew = [\n            ...allUnits,\n            {ID: v4(), requestName: `Request ${allUnits.length + 1}`}\n          ];\n          setAllUnits(allUnitsNew);\n          postRef(allUnitsNew);\n        }}\n      >\n        Add request (unit)\n      </button>\n      {ClearButton}\n      <br />\n      <br />→ Logged in as <b>{login}</b>\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <b>Disclaimer:</b>\n      <br /> 1. No signup required <br /> 2. For now there's no securitey to any\n      account.\n      <br /> 3. Tip: Press enter to login. or `sahil`).\n      <br />\n      4. Tip: For testing use either `sahil` or `guest`.\n      <br />\n      Happy Hacking!\n      <br />\n      <br />\n      Input backend database url to use:\n      <input\n        value={dbPrefix}\n        onChange={({target: {value}}) => setDbPrefix(value)}\n      />\n    </div>\n  );\n}\n\nfunction Unit({\n  inputCode: inputCode_remote,\n  ID,\n  result: resul_remote,\n  requestName\n}) {\n  const [inputCode, setInputCode] = useState(\n    inputCode_remote ?? \"axios.get('https://reverberate.ml')\"\n  );\n  const [result, setResult] = useState(resul_remote ?? '');\n  const [allUnits, setAllUnits] = getWhat('allUnits');\n  const [combinedDebounce] = useDebounce(inputCode + result, 2000);\n  const [db] = getWhat('db');\n\n  useEffect(() => {\n    let allUnitsNew = allUnits.map((e) =>\n      e.ID === ID ? {...e, inputCode, result} : e\n    );\n\n    setAllUnits(allUnitsNew);\n    postRef(allUnitsNew);\n    //  eslint-disable-next-line\n  }, [combinedDebounce]);\n  return (\n    <fieldset className=\"App\">\n      <legend>{requestName}</legend>\n      <textarea\n        value={inputCode}\n        placeholder=\"Write some request with axios, say get/delete/post whatever you like.\"\n        onChange={({target: {value}}) => {\n          setInputCode(value);\n        }}\n      />\n      <button\n        onClick={() => {\n          riskyCode(async () => {\n            let {data} = await eval('document.' + inputCode);\n            if (typeof data === 'object')\n              setResult(JSON.stringify(data, null, 2));\n            else {\n              setResult(data);\n            }\n          }, setResult);\n        }}\n      >\n        Fire request !!\n      </button>\n      <br />\n      <pre id=\"result\">{result}</pre>\n    </fieldset>\n  );\n}\n","let log = console.log;\r\n\r\nexport let riskyCode = async (fn, setResult) => {\r\n  try {\r\n    await fn();\r\n  } catch (error) {\r\n    log('#caught::', error);\r\n    setResult(\r\n      \"#Request falied!, possible errors are - 1. Syntax errors, 2. Target doesn't supports `CORS`, etc.\"\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\trootElement\n);\n"],"sourceRoot":""}