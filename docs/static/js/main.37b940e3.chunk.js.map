{"version":3,"sources":["App.js","Testing.js","Footer.js","index.js","riskyCode.js"],"names":["postRefGlobal","document","axios","localDbUrl","prodDbUrl","isProd","App","useWhatPersistent","dbPrefix","setDbPrefix","login","setLogin","activeLogin","setActiveLogin","sheet","setSheet","activeSheet","setActiveSheet","allUnits","setAllUnits","useState","fetchRef","useRef","log","post","then","data","Array","catch","e","allUnitsNew","notificationEl","querySelector","style","display","setTimeout","ClearButton","className","onClick","useEffect","ChooseSheet","map","sheetNameValue","idx","backgroundColor","key","class","Login","element","Unit","ID","inputCode","result","requestName","v4","length","value","onChange","target","onSubmit","preventDefault","inputCode_remote","resul_remote","setInputCode","setResult","getWhat","useDebounce","combinedDebounce","db","_","rows","placeholder","a","eval","JSON","stringify","name","message","content","filter","MyResizable","width","height","state","setState","onResize","event","size","handle","Footer","rootElement","getElementById","ReactDOM","render","StrictMode","console"],"mappings":"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","file":"static/js/main.37b940e3.chunk.js","sourcesContent":["/* eslint-disable no-eval, no-unused-vars */\nimport React, {useEffect, useState, useRef} from 'react'\nimport './styles.css'\nimport axios from 'axios'\nimport {useLocalStorage} from './useLocalStorage'\nimport {riskyCode} from './riskyCode'\nimport {log, useWhat, getWhat, useWhatPersistent} from 'usewhat'\nimport {useDebounce} from 'use-debounce'\nimport {v4} from 'uuid'\nimport {MyResizable} from './Testing.js'\nimport {Footer} from './Footer'\n//new deployment @ https://csb-nljvu.netlify.app/\n\ndocument.axios = axios\nlet postRefGlobal\n\nconst localDbUrl = 'https://e53e8cfe24ac.ngrok.io'\nconst prodDbUrl = 'https://jsonbackendserver.herokuapp.com'\nconst isProd = true\n\nexport default function App() {\n  const [dbPrefix, setDbPrefix] = useWhatPersistent('dbprefix', isProd ? prodDbUrl : localDbUrl)\n\n  // using useLocalStorage here throws warning that circular objects can't be converted ..blah blah.., dig it out...\n  // const [allUnits, setAllUnits] = useState([<Unit key={Math.random()} />]);\n  const [login, setLogin] = useWhatPersistent('login', 'guest')\n  const [activeLogin, setActiveLogin] = useWhatPersistent('active-login', 'guest')\n  const [sheet, setSheet] = useWhatPersistent('sheet', 'one')\n  const [activeSheet, setActiveSheet] = useWhatPersistent('active-sheet', 'one')\n  // const [db_localStorage, setDb_localStorage] = useLocalStorage('db', null);\n  // if (db !== db_localStorage) setDb_localStorage(db);\n  const [allUnits, setAllUnits] = useWhatPersistent('allUnits', [])\n  // const [allUnits, setAllUnits] = useWhat(\"allUnits\", []);\n  const [count, setCount] = useState(1)\n  let fetchRef = useRef()\n\n  fetchRef = () => {\n    log('fetchref executed')\n    // log({sheet})\n    axios\n      .post(`${dbPrefix}/${login}_${sheet}`)\n      .then(({data}) => {\n        setAllUnits(data.allUnits instanceof Array ? data.allUnits : [])\n\n        setActiveSheet(sheet)\n        setActiveLogin(login) // ? Wow this is awesome!! 4 stage status of state implemented ü•≥Ô∏é.\n        log('#fetched from', login + sheet, data)\n        // log('#fetched', data.allUnits);\n      })\n      .catch((e) => {})\n  }\n\n  postRefGlobal = (allUnitsNew) => {\n    axios.post(`${dbPrefix}/${login}_${sheet}`, {allUnits: allUnitsNew}).catch((e) => {})\n    log({allUnitsNew})\n    // alert('saved...')\n    const notificationEl = document.querySelector('.notification-message')\n    if (notificationEl) {\n      notificationEl.style.display = 'block'\n\n      setTimeout(() => {\n        notificationEl.style.display = 'none'\n      }, 1500)\n\n      // Purged Code....\n      // notificationEl.innerText = 'Saved...'\n      // notificationEl.style.backgroundColor = 'yellow'\n      // notificationEl.innerText = ''\n    }\n    log('#posted to =>', login + '_' + sheet)\n  }\n\n  const ClearButton = (\n    <button\n      className='btn-blue'\n      onClick={() => {\n        setAllUnits([])\n        // localStorage.clear() // üõëÔ∏éüõëÔ∏éüõëÔ∏édid it a moment ago coz i think this not what i want..\n        // below is üî•Ô∏é üî•Ô∏éexperimental code...\n        postRefGlobal([])\n      }}>\n      Clear List\n    </button>\n  )\n\n  useEffect(() => {\n    fetchRef()\n  }, [sheet, dbPrefix])\n\n  const ChooseSheet = ({activeSheet}) =>\n    ['one', 'two', 'three'].map((sheetNameValue, idx) => (\n      <button\n        className='btn-blue'\n        style={activeSheet === sheetNameValue ? {backgroundColor: 'deeppink'} : {}}\n        // style={ activeSheet === sheetNameValue ? }\n        key={idx}\n        onClick={() => {\n          setSheet(sheetNameValue)\n        }}>\n        {sheetNameValue}\n      </button>\n    ))\n\n  return (\n    <div className='container'>\n      <div className='notification-message'>Saved... üöÄÔ∏é</div>\n      <header>\n        <h1>Axios Playground</h1>\n        <h4>100% ready for your offline needs for storing your axios requests and responses.</h4>\n        <h5>\n          <span className='emoji-medium'>ü§†Ô∏é</span> FYI: All your request and request responses are persistent. Every 2 secs cache is saved to the server.\n        </h5>\n      </header>\n      {/*  */}\n      <section className='row space-between'>\n        <div className='col'>\n          <div className='flex-start row-centered'>\n            <span class='emoji-medium'>üßëÔ∏é‚ÄçüöÄÔ∏é</span> You - <b className='margin-left-6'>{activeLogin}</b>\n          </div>\n          {/*  */}\n          <div className='flex-start height-30 row-centered'>\n            <span className='emoji-medium'>üìÅÔ∏é </span> Active sheet - <b className='margin-left-6'>{activeSheet}</b>\n          </div>\n        </div>\n        {/*  */}\n        <div className='col'>\n          <div className='flex-end login-section row-centered'>\n            <span className='emoji-medium'>üì¢Ô∏é </span> Change user : <Login fetchRef={fetchRef} login={login} setLogin={setLogin} />\n          </div>\n          {/*  */}\n          <div className='flex-end login-section row-centered'>\n            <span className='emoji-medium'>üìÅÔ∏é</span> <span class='change-sheet-text'>Change sheet :</span>\n            <ChooseSheet activeSheet={activeSheet} />\n          </div>\n        </div>\n      </section>\n      {/*  */}\n      {/* <section className='db-buttons'></section> */}\n      <br />\n      <br />\n      <br />\n      {allUnits?.map((element) => (\n        <Unit key={element.ID} ID={element.ID} inputCode={element.inputCode} result={element.result} requestName={element.requestName} />\n      ))}\n      <br />\n      <br />\n      <br />\n      <button\n        className='btn-blue'\n        onClick={() => {\n          const allUnitsNew = [...allUnits, {ID: v4(), requestName: `Request ${allUnits.length + 1}`}]\n          setAllUnits(allUnitsNew)\n          postRefGlobal(allUnitsNew)\n        }}>\n        Add a request\n        {/* add a unit request... */}\n      </button>\n      {ClearButton}\n      <br />\n      <Footer />\n      üî•Ô∏éüî•Ô∏é TESTING: Input backend database url to use:\n      <input value={dbPrefix} onChange={({target: {value}}) => setDbPrefix(value)} />\n    </div>\n  )\n}\n\nconst Login = ({fetchRef, login, setLogin}) => (\n  <form\n    className='inline'\n    onSubmit={(e) => {\n      e.preventDefault()\n      fetchRef()\n    }}>\n    <input className='input-change-user' value={login} onChange={({target: {value}}) => setLogin(value)} />\n  </form>\n)\n\nfunction Unit({inputCode: inputCode_remote, ID, result: resul_remote, requestName}) {\n  const [inputCode, setInputCode] = useState(inputCode_remote ?? \"axios.get('https://reverberate.ml')\")\n  const [result, setResult] = useWhatPersistent(requestName, resul_remote ?? '') // ? Testing(Works perferctly fine for now!!) for storing result to local storage too.\n  // const [result, setResult] = useState(resul_remote ?? \"\");\n  const [allUnits, setAllUnits] = getWhat('allUnits')\n  const [combinedDebounce] = useDebounce(inputCode + result, 2000)\n  const [db] = getWhat('db')\n  const [dbPrefix, _] = getWhat('dbprefix')\n\n  useEffect(() => {\n    let allUnitsNew = allUnits.map((e) => (e.ID === ID ? {...e, inputCode, result} : e))\n\n    setAllUnits(allUnitsNew)\n    postRefGlobal(allUnitsNew)\n    //  eslint-disable-next-line\n  }, [combinedDebounce])\n  return (\n    <fieldset className='App'>\n      <legend>{requestName}</legend>\n      <textarea\n        value={inputCode}\n        rows='1'\n        // wow.. ^^ thats what I wanted...!!\n        placeholder='Write some request with axios.'\n        onChange={({target: {value}}) => {\n          setInputCode(value)\n        }}\n      />\n      <button\n        className='btn--fire-request'\n        onClick={() => {\n          // Calling async function with 0 delay üöÄÔ∏éüöÄÔ∏éüöÄÔ∏é...\n          setTimeout(async () => {\n            try {\n              let {data} = await eval('document.' + inputCode)\n              if (typeof data === 'object') {\n                setResult(JSON.stringify(data, null, 2))\n              } else {\n                setResult(data)\n              }\n            } catch (err) {\n              log('#caught::', err)\n              setResult(\n                `REQUEST FALIED !\\n Possible errors are - 1. Syntax errors, 2. Target doesn't supports 'CORS'. \\n\\n\\n üõëÔ∏é Javascript compiler threw - \\n    ${err.name} \\n    ${err.message}`\n              )\n            } finally {\n              let allUnitsNew = allUnits.map((e) => (e.ID === ID ? {...e, result} : e))\n\n              setAllUnits(allUnitsNew)\n              postRefGlobal(allUnitsNew)\n            }\n          })\n\n          // riskyCode(, setResult)\n        }}>\n        üî•Ô∏é Fire request\n      </button>\n\n      <br />\n      {/* <textarea className=\"result-new\">{result}</textarea> THIS DOESN'T WORK GOOD. */}\n      <MyResizable content={result} />\n      {/* <pre id=\"result\">{result}</pre> */}\n      <button\n        className='btn--delete-request'\n        onClick={() => {\n          // ...üò¨Ô∏éüò¨Ô∏éüò¨Ô∏éüò¨Ô∏éüò¨Ô∏é\n          // log({allUnits})\n          let allUnitsNew = allUnits.filter((e) => e.ID !== ID)\n\n          setAllUnits(allUnitsNew)\n          postRefGlobal(allUnitsNew)\n        }}>\n        Delete\n      </button>\n    </fieldset>\n  )\n}\n","import React, {useState, useEffect} from 'react'\r\nimport {withResizeDetector} from 'react-resize-detector'\r\nimport {Resizable, ResizableBox} from 'react-resizable'\r\nimport {log} from 'usewhat'\r\n\r\nexport const MyResizable = ({content}) => {\r\n  const [state, setState] = useState({\r\n    width: 600,\r\n    // width: 'auto',\r\n    height: 200,\r\n  })\r\n  const onResize = (event, {element, size, handle}) => {\r\n    log(size)\r\n    setState({width: size.width, height: size.height})\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Resizable className='box' height={state.height} width={state.width} onResize={onResize}>\r\n        <div\r\n          className='box'\r\n          style={{\r\n            width: state.width + 'px',\r\n            height: state.height + 'px',\r\n          }}>\r\n          <span className='text'>\r\n            {/* {'Raw use of <Resizable> element. 200x200, all Resize Handles.'} */}\r\n            <pre style={{height: state.height - 15}}>{content}</pre>\r\n          </span>\r\n          {/* <button onClick={onResetClick} style={{marginTop: '10px'}}>\r\n            Reset this element's width/height\r\n          </button> */}\r\n        </div>\r\n      </Resizable>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\n\nexport const Footer = () => {\n  return (\n    <div class='footer'>\n      <b>Disclaimer:</b>\n      <ol>\n        <li>No signup required</li>\n        <li> For now there's no securitey to any account.</li>\n        <li> Tip: Press enter to login. or simply use 'sahil'.</li>\n        <li> Changing db only works for when you set valid jsonbackendserver in the 'Input backend database' field and press enter.</li>\n        <li> This axios playground perfectly works for locally saving to broser too.</li>\n        <li> Please allow 2 seconds after typing into request code area to get it saved to localStorage to browser.</li>\n        <li> Tip: For testing use either 'sahil' or 'guest'.</li>\n      </ol>\n      <br />\n      Happy Hacking!\n      <br />\n      <br />\n    </div>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\trootElement\n);\n","let log = console.log\r\n\r\nexport let riskyCode = async (fn, setResult) => {\r\n  try {\r\n    await fn()\r\n  } catch (error) {\r\n    log('#caught::', error)\r\n    setResult(\r\n      `#Request falied!, possible errors are - 1. Syntax errors, 2. Target doesn't supports 'CORS', etc. \\n\\n\\n üõëÔ∏é Javascript compiler threw - \\n    ${error.name} \\n    ${error.message}`\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}